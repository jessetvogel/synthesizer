# Parameters
node_create parameter waveform_1 [min = 0.0, max = 3.999]
node_create parameter waveform_2 [min = 0.0, max = 3.999]
node_create parameter waveform_3 [min = 0.0, max = 3.999]

node_create parameter harmonic_1 [min = 1.0, max = 12.0]
node_create parameter harmonic_2 [min = 1.0, max = 12.0]
node_create parameter harmonic_3 [min = 1.0, max = 12.0]

node_create parameter gain_1 [min = 0.0, max = 1.0]
node_create parameter gain_2 [min = 0.0, max = 1.0]
node_create parameter gain_3 [min = 0.0, max = 1.0]

node_create parameter glide [min = 0.01, max = 1.00, curve = exponential]

node_create parameter attack_time [value = 0.1, min = 0.005, max = 1.000, curve = exponential]
node_create parameter decay_time [value = 0.05, min = 0.005, max = 1.000, curve = exponential]
node_create parameter sustain_level [value = 0.05, min = 0.0, max = 1.0]
node_create parameter release_time [value = 0.1, min = 0.005, max = 1.000, curve = exponential]

node_create parameter delay_gain [min = 0.0, max = 1.0]
node_create parameter delay_time [min = 0.234375, max = 0.468750]

node_create parameter cutoff [min = 20.0, max = 15000.0, curve = exponential]

# Vibrato
node_create adder vibrato_amplitude [n = 1, input_1 = modulation_wheel, gain_1 = 0.059463]
node_create adder vibrato_frequency [n = 2, input_1 = modulation_wheel, gain_1 = 3.0, input_2 = 3.0]
node_create oscillator vibrato [mean = 1.0, sample = sine, amplitude = vibrato_amplitude, frequency = vibrato_frequency]
node_create adder main_frequency [voice = true, n = 1, input_1 = key_frequency, gain_1 = vibrato]

# Frequencies
node_create rounder harmonic_1_rounded [voice = true, function = round, input = harmonic_1]
node_create rounder harmonic_2_rounded [voice = true, function = round, input = harmonic_2]
node_create rounder harmonic_3_rounded [voice = true, function = round, input = harmonic_3]

node_create adder frequency_1 [voice = true, input_1 = main_frequency, gain_1 = harmonic_1_rounded]
node_create adder frequency_2 [voice = true, input_1 = main_frequency, gain_1 = harmonic_2_rounded]
node_create adder frequency_3 [voice = true, input_1 = main_frequency, gain_1 = harmonic_3_rounded]

# Envelope
node_create ADSR envelope [voice = true]
node_set envelope.attack_time attack_time
node_set envelope.decay_time decay_time
node_set envelope.sustain_level sustain_level
node_set envelope.release_time release_time
node_set envelope.attack_curve quadout
node_set envelope.decay_curve quadout
node_set envelope.release_curve quadout

# Oscillators
node_create oscillator oscillator_1 [voice = true, sample = waveform_1, frequency = frequency_1, amplitude = envelope] # key_velocity # amplitude_1
node_create oscillator oscillator_2 [voice = true, sample = waveform_2, frequency = frequency_2, amplitude = envelope]
node_create oscillator oscillator_3 [voice = true, sample = waveform_3, frequency = frequency_3, amplitude = envelope]

node_create adder voice_output [voice = true, n = 3]
node_set voice_output.input_1 oscillator_1
node_set voice_output.gain_1 gain_1
node_set voice_output.input_2 oscillator_2
node_set voice_output.gain_2 gain_2
node_set voice_output.input_3 oscillator_3
node_set voice_output.gain_3 gain_3

# Filter
node_create highpass filter [voice = true, n = 2]
node_set filter.input voice_output
node_set filter.cutoff cutoff

# Collector
node_create collector_lead collector
node_set collector.input filter
node_set collector.release_time 1.0
node_set collector.glide glide

# Delay
node_create delay delay [n = 1, T = 1.0]
node_set delay.input collector
node_set delay.time_1 delay_time
node_set delay.gain_1 delay_gain
node_set delay.feedback 1.0

# Output
node_create audio_output output
node_set output.channel_1 delay
